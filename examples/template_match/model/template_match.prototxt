name: "template_match_layers"

########## data layers ##########
layer {
    name: "template"
    type: "MultiLabelImageData"
    top: "data_template"
    top: "center_target"
    multi_label_image_data_param {
        source: "/run/media/larry/fafb882a-0878-4e0a-9ccb-2fb979b7f717/e3dengine/caffe/data/template_match/SFZ/template_data.txt"
        label_num: 2
	      new_height: 32
	      new_width: 32
        batch_size: 10
    }
    transform_param {
        mirror: false
        mean_value:128
        scale: 0.00625
    }
}
layer {
    name: "search"
    type: "ImageData"
    top: "data_search"
    top: "confidence_label"
    image_data_param {
        source: "/run/media/larry/fafb882a-0878-4e0a-9ccb-2fb979b7f717/e3dengine/caffe/data/template_match/SFZ/search_data.txt"
	      new_height: 256
	      new_width: 256
        batch_size: 10
    }
    transform_param {
        mirror: false
        mean_value: 128
        scale: 0.00625
    }
}
########## EOF data layers ##########
########## First siamese layers ##########
### left
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data_template"
  top: "conv1_1"
  param {
    name: "conv1_1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv1_2"
  param {
    name: "conv1_2_w"
    lr_mult: 1
  }
  param {
    name: "conv1_2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1_1_p"
  type: "Convolution"
  bottom: "data_search"
  top: "conv1_1_p"
  param {
    name: "conv1_1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu1_1_p"
  type: "ReLU"
  bottom: "conv1_1_p"
  top: "conv1_1_p"
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1_2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv1_2_p"
  param {
    name: "conv1_2_w"
    lr_mult: 1
  }
  param {
    name: "conv1_2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu1_2_p"
  type: "ReLU"
  bottom: "conv1_2_p"
  top: "conv1_2_p"
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv1_2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

### FC layers 1 for search image side, output transform params
layer {
  name: "conv1_st1"
  type: "Convolution"
  bottom: "pool2_p"
  top: "conv1_st1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu1_st1"
  type: "ReLU"
  bottom: "conv1_st1"
  top: "conv1_st1"
}
layer {
  name: "pool1_st1"
  type: "Pooling"
  bottom: "conv1_st1"
  top: "pool1_st1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc1_st1"
  type: "InnerProduct"
  bottom: "pool1_st1"
  top: "fc1_st1"
  inner_product_param {
    num_output: 1024
  }
}
layer {
  name: "relu2_st1"
  type: "ReLU"
  bottom: "fc1_st1"
  top: "fc1_st1"
}
layer {
  name: "drop1_st1"
  type: "Dropout"
  bottom: "fc1_st1"
  top: "drop1_st1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc2_st1"
  type: "InnerProduct"
  bottom: "drop1_st1"
  top: "center_st1"
  inner_product_param {
    num_output: 2
  }
}

layer {
    name: "trans_st1"
    type: "SpatialTransformer"
    bottom: "pool2_p"
    bottom: "center_st1"
    top: "out_st1"
    st_param {
        output_H: 8  # same size as template
        output_W: 8
        theta_1_1: -0.5  # fix anti-diagonal params
        theta_1_2: 0
        theta_2_1: 0
        theta_2_2: 0.5
    }
}

########## FC layer to compute match confidence ##########
layer {
  name: "concat1"
  type: "Concat"
  bottom: "pool2"
  bottom: "out_st1"
  top: "out1"
  concat_param {
    axis: 1
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "out1"
  top: "fc1"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "fc1"
  top: "drop1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "drop1"
  top: "fc2"
  inner_product_param {
    num_output: 256
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "drop2"
  type: "Dropout"
  bottom: "fc2"
  top: "drop2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "drop2"
  top: "prob"
  inner_product_param {
    num_output: 2
  }
}

########## Loss layer ##########
layer {
  name: "loss_confidence"
  type: "SoftmaxWithLoss"
  bottom: "prob"
  bottom: "confidence_label"
  top: "loss_confidence"
  include {
    phase: TRAIN
  }
  loss_weight: 1
}

layer {
  name: "weighted_center"
  type: "Scale"
  bottom: "center_st1"
  bottom: "confidence_label"
  top: "weighted_center"
  scale_param {
    axis: 0
  }
}
layer {
  name: "weighted_target"
  type: "Scale"
  bottom: "center_target"
  bottom: "confidence_label"
  top: "weighted_target"
  scale_param {
    axis: 0
  }
}
layer {
  name: "loss_translation"
  type: "EuclideanLoss"
  bottom: "weighted_center"
  bottom: "weighted_target"
  top: "loss_translation"
  loss_weight: 1
}