name: "matchnet_layers"

################## data layers ##################
layer {
    name: "data_A"
    type: "ImageData"
    top: "data_A"
    top: "confidence_label"
    image_data_param {
        source: "/run/media/larry/fafb882a-0878-4e0a-9ccb-2fb979b7f717/e3dengine/caffe/examples/template_match/model/matchnet/data_offset_4/patch_list_train.txt"
	      new_height: 64
	      new_width: 64
        batch_size: 128
        is_color: false
    }
    transform_param {
        mirror: false
        mean_value:128
        scale: 0.00625
    }
    include {
    	phase: TRAIN
    }
}
layer {
    name: "data_P"
    type: "ImageData"
    top: "data_P"
    top: "confidence_label_p"
    image_data_param {
        source: "/run/media/larry/fafb882a-0878-4e0a-9ccb-2fb979b7f717/e3dengine/caffe/examples/template_match/model/matchnet/data_offset_4/patch_list_p_train.txt"
	      new_height: 64
	      new_width: 64
        batch_size: 128
        is_color: false
    }
    transform_param {
        mirror: false
        mean_value: 128
        scale: 0.00625
    }
    include {
    	phase: TRAIN
    }
}
layer {
    name: "data_A"
    type: "ImageData"
    top: "data_A"
    top: "confidence_label"
    image_data_param {
        source: "/run/media/larry/fafb882a-0878-4e0a-9ccb-2fb979b7f717/e3dengine/caffe/examples/template_match/model/matchnet/data_offset_4/patch_list_test.txt"
	      new_height: 64
	      new_width: 64
        batch_size: 64
        is_color: false
    }
    transform_param {
        mirror: false
        mean_value:128
        scale: 0.00625
    }
    include {
    	phase: TEST
    }
}
layer {
    name: "data_P"
    type: "ImageData"
    top: "data_P"
    top: "confidence_label_p"
    image_data_param {
        source: "/run/media/larry/fafb882a-0878-4e0a-9ccb-2fb979b7f717/e3dengine/caffe/examples/template_match/model/matchnet/data_offset_4/patch_list_p_test.txt"
	      new_height: 64
	      new_width: 64
        batch_size: 64
        is_color: false
    }
    transform_param {
        mirror: false
        mean_value: 128
        scale: 0.00625
    }
    include {
    	phase: TEST
    }
}
layer {
  bottom: "confidence_label_p"
  name: "silence_label"
  type: "Silence"
}
################## EOF data layers ##################

################## head of tower A ##################
layer {
  bottom: "data_A"
  top: "conv0"
  name: "conv0"
  type: "Convolution"
  param {
  name: "conv0_w"
  lr_mult : 0
  }
  param {
    name: "conv0_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 24
    pad: 3
    kernel_size: 7
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv0"
  top: "conv0"
  name: "conv0_relu"
  type: "ReLU"
}
layer {
  bottom: "conv0"
  top: "pool0"
  name: "pool0"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}
layer {
  bottom: "pool0"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  param {
  name: "conv1_w"
  lr_mult : 0
  }
  param {
    name: "conv1_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}
layer {
  bottom: "pool1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  param {
  name: "conv2_w"
  lr_mult : 0
  }
  param {
    name: "conv2_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "conv2_relu"
  type: "ReLU"
}
layer {
  bottom: "conv2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  param {
  name: "conv3_w"
  lr_mult : 0
  }
  param {
    name: "conv3_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "conv3_relu"
  type: "ReLU"
}
layer {
  bottom: "conv3"
  top: "conv4"
  name: "conv4"
  type: "Convolution"
  param {
  name: "conv4_w"
  lr_mult : 0
  }
  param {
    name: "conv4_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv4"
  top: "conv4"
  name: "conv4_relu"
  type: "ReLU"
}
layer {
  bottom: "conv4"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}

layer {
  bottom: "pool4"
  top: "pool4"
  name: "pool4_dropout"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name : "neck0"
  type : "InnerProduct"
  bottom : "pool4"
  top : "feat"
  param {
    name : "neck0_w"
    lr_mult : 1
    decay_mult : 10
  }
  param {
    name : "neck0_b"
    lr_mult  : 2
    decay_mult : 10
  }
  inner_product_param {
    num_output : 512
    weight_filler {
      type : "msra"
    }
    bias_filler {
      type : "constant"
    }
  }
}
################## end of tower A ##################

################## head of tower P ##################
layer {
  bottom: "data_P"
  top: "conv0_p"
  name: "conv0_p"
  type: "Convolution"
  param {
  name: "conv0_w"
  lr_mult : 0
  }
  param {
    name: "conv0_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 24
    pad: 3
    kernel_size: 7
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv0_p"
  top: "conv0_p"
  name: "conv0_relu_p"
  type: "ReLU"
}
layer {
  bottom: "conv0_p"
  top: "pool0_p"
  name: "pool0_p"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}
layer {
  bottom: "pool0_p"
  top: "conv1_p"
  name: "conv1_p"
  type: "Convolution"
  param {
  name: "conv1_w"
  lr_mult : 0
  }
  param {
    name: "conv1_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv1_p"
  top: "conv1_p"
  name: "conv1_relu_p"
  type: "ReLU"
}
layer {
  bottom: "conv1_p"
  top: "pool1_p"
  name: "pool1_p"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}
layer {
  bottom: "pool1_p"
  top: "conv2_p"
  name: "conv2_p"
  type: "Convolution"
  param {
  name: "conv2_w"
  lr_mult : 0
  }
  param {
    name: "conv2_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv2_p"
  top: "conv2_p"
  name: "conv2_relu_p"
  type: "ReLU"
}
layer {
  bottom: "conv2_p"
  top: "conv3_p"
  name: "conv3_p"
  type: "Convolution"
  param {
  name: "conv3_w"
  lr_mult : 0
  }
  param {
    name: "conv3_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv3_p"
  top: "conv3_p"
  name: "conv3_relu_p"
  type: "ReLU"
}
layer {
  bottom: "conv3_p"
  top: "conv4_p"
  name: "conv4_p"
  type: "Convolution"
  param {
  name: "conv4_w"
  lr_mult : 0
  }
  param {
    name: "conv4_b"
  lr_mult : 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  weight_filler {
    type : "msra"
  }
  bias_filler {
    type : "constant"
  }
  }
}
layer {
  bottom: "conv4_p"
  top: "conv4_p"
  name: "conv4_relu_p"
  type: "ReLU"
}
layer {
  bottom: "conv4_p"
  top: "pool4_p"
  name: "pool4_p"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}

layer {
  bottom: "pool4_p"
  top: "pool4_p"
  name: "pool4_dropout_p"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name : "neck0_p"
  type : "InnerProduct"
  bottom : "pool4_p"
  top : "feat_p"
  param {
    name : "neck0_w"
    lr_mult : 1
  decay_mult : 10
  }
  param {
    name : "neck0_b"
    lr_mult  : 2
    decay_mult : 10
  }
  inner_product_param {
    num_output : 512
  weight_filler {
    type : "msra"
    }
  bias_filler {
    type : "constant"
    }
  }
}
################## end of tower P ##################




################## classifier network ##################
layer {
  name : "concat"
  type : "Concat"
  bottom : "feat"
  bottom : "feat_p"
  top : "concat_feat"
}
layer {
  name : "fc1"
  type : "InnerProduct"
  bottom : "concat_feat"
  top : "fc1"
  param {
    lr_mult : 1
  decay_mult : 10
  }
  param {
    lr_mult : 1
    decay_mult : 10
  }
  inner_product_param {
    num_output : 512
  weight_filler {
    type : "msra"
    }
  bias_filler {
    type : "constant"
    }
  }
}

layer {
  name : "fc1_relu"
  type : "ReLU"
  bottom : "fc1"
  top : "fc1_relu"
}

layer {
  name : "fc2"
  type : "InnerProduct"
  bottom : "fc1_relu"
  top : "fc2"
  param {
    lr_mult : 1
  decay_mult : 10
  }
  param {
    lr_mult : 1
    decay_mult : 10
  }
  inner_product_param {
    num_output : 512
  weight_filler {
    type : "msra"
    }
  bias_filler {
    type : "constant"
    }
  }
}
layer {
  name : "fc2_relu"
  type : "ReLU"
  bottom : "fc2"
  top : "fc2_relu"
}
layer {
  name : "fc3"
  type : "InnerProduct"
  bottom : "fc2_relu"
  top : "output"
  param {
    lr_mult : 1
  decay_mult : 10
  }
  param {
    lr_mult : 1
    decay_mult : 10
  }
  inner_product_param {
    num_output : 2
  weight_filler {
    type : "msra"
    }
  bias_filler {
    type : "constant"
    }
  }
}
layer {
  bottom : "output"
  bottom : "confidence_label"
  top: "softmax_loss"
  type: "SoftmaxWithLoss"
  loss_weight: 1
  name : "softmax_loss"
}

layer {
  bottom : "output"
  bottom : "confidence_label"
  name : "accuracy"
  type : "Accuracy"
  top : "accuracy"
}
